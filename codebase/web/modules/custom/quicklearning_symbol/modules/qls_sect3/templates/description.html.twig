{#
Description text for Section 3.
#}

{{ attach_library('core/drupal.dialog.ajax') }}

{% set qls_sect3_form_one = path('qls_sect3.form_one') %}
{% set qls_sect3_form_two = path('qls_sect3.form_two') %}
{% set qls_sect3_form_three = path('qls_sect3.form_three') %}
{% set qls_sect3_form_four = path('qls_sect3.form_four') %}

{% trans %}
<h2>アカウント</h2>

<p>
アカウントは秘密鍵に紐づく情報が記録されたデータ構造体です。
アカウントと関連づいた秘密鍵を使って署名することでのみブロックチェーンのデータを更新することができます。
</p>

<h3>3.1 アカウント生成</h3>
<p>
アカウントには秘密鍵と公開鍵をセットにしたキーペア、アドレスなどの情報が含まれています。
まずはランダムにアカウントを作成して、それらの情報を確認してみましょう。
</p>

<h4><a href={{ qls_sect3_form_one }}>3.1.1 新規生成 3.1.2 秘密鍵と公開鍵の導出 3.1.3 アドレスの導出</a></h4>
<p>
注意事項
秘密鍵を紛失するとそのアカウントに紐づけられたデータを操作することが出来なくなります。
また、他人は知らないという秘密鍵の性質を利用してデータ操作の署名を行うので、秘密鍵を他人に教えてはいけません。
組織のなかで秘密鍵を譲り受けて運用を続けるといった行為も控えましょう。
一般的なWeb サービスでは「アカウントID」に対してパスワードが割り振られるため、パスワードの変更が可能ですが、
ブロックチェーンではパスワードにあたる秘密鍵に対して一意に決まるID(アドレス) が割り振られるため、アカウントに紐づく秘密鍵を変更するということはできません。
</p>
<p>
これらがブロックチェーンを操作するための最も基本的な情報となります。
また、秘密鍵からアカウントを生成したり、公開鍵やアドレスのみを扱うクラスの生成方法も確認しておきましょう。
</p>

<h4><a href={{ qls_sect3_form_two }}>3.1.4 秘密鍵からアカウント生成</a></h4>
<h4><a href={{ qls_sect3_form_three }}>3.1.5 公開鍵クラスの生成</a></h4>
<h4>3.1.6 アドレスクラスの生成</h4>
<code>
$aliceAddress = new Address('TDNX2EJJKC3C4QOGURQZLQS6KJLQACTGWYZFKTQ');
echo $aliceAddress->__tostring() . PHP_EOL;
</code>

<h3>3.2 アカウントへの送信</h3>
<p>
アカウントを作成しただけでは、ブロックチェーンにデータを送信することはできません。
パブリックブロックチェーンはリソースを有効活用するためにデータ送信時に手数料を要求します。
Symbol ブロックチェーンでは、この手数料をXYM という共通トークンで支払うことになります。
アカウントを生成したら、この後の章から説明するトランザクションを実行するために必要な手数料を送信しておきます。
</p>

<h4>3.2.1 フォーセットから送信</h4>
<p>テストネットではフォーセット（蛇口）サービスから検証用のXYM を入手することができます。
メインネットの場合は取引所などでXYM を購入するか、投げ銭サービス(QUEST) などを利用して寄付を募りましょう。
<ul>
<li><a href="https://testnet.symbol.tools/">テストネット- FAUCET(蛇口) - https://testnet.symbol.tools/</a></li>
<li><a href="https://quest-bc.com/">メインネット- QUEST - https://quest-bc.com/</a></li>
</ul>
</p>
<h4>3.2.2 エクスプローラーで確認</h4>
<p>フォーセットから作成したアカウントへ送信が成功したらエクスプローラーで確認してみましょう。
<ul>
<li><a href="https://testnet.symbol.fyi/">テストネット – https://testnet.symbol.fyi/</a></li>
<li><a href="https://symbol.fyi/">メインネット – https://symbol.fyi/</a></li>
</ul>
</p>

<h3>3.3 アカウント情報の確認</h3>
<p>
ノードに保存されているアカウント情報を取得します。
</p>

<h4><a href={{ qls_sect3_form_four }}>3.3.1 所有モザイク一覧の取得</a></h4>

<p>
publicKey
クライアント側で作成しただけで、ブロックチェーンでまだ利用されていないアカウント情報は記録されていません。
宛先として指定されて受信することで初めてアカウント情報が記録され、署名したトランザクションを送信することで公開鍵の情報が記録されます。
そのため、publicKey は現在00000... 表記となっています。
</p>

<h3>3.4 現場で使えるヒント</h3>
<h4>3.4.1 暗号化と署名</h4>
アカウントとして生成した秘密鍵や公開鍵は、そのまま従来の暗号化や電子署名として活用することができます。
信頼性に問題点があるアプリケーションを使用する必要がある場合も、個人間（エンドツーエンド）でデータの秘匿性・正当性を検証することができます。

<p>事前準備：対話のためのBob アカウントを生成</p>

<p>暗号化</p>

<p>
Alice の秘密鍵・Bob の公開鍵で暗号化し、Alice の公開鍵・Bob の秘密鍵で復号します（AES-GCM 形式）。
</p>
<p>
ブロックチェーンを使用しない署名は何度も再利用される可能性があることにご注意ください。
</p>
{% endtrans %}