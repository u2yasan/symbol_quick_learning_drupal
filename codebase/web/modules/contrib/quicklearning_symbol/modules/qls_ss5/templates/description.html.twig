{#

Description text for Section 5.

#}

{{ attach_library('core/drupal.dialog.ajax') }}

{% set qls_ss5_create_mosaic_form = path('qls_ss5.create_mosaic_form') %} 
{% set qls_ss5_list_mosaics_form = path('qls_ss5.list_mosaics_form') %} 
{% set qls_ss5_mosaics_transfer_transaction_form = path('qls_ss5.mosaics_transfer_transaction_form') %} 
{% set qls_ss5_confirm_transaction_form = path('qls_ss5.confirm_transaction_form') %} 

{% trans %}

<h2>第5章 モザイク</h2>

<p>
本章ではモザイクの設定とその生成方法について解説します。Symbol ではトークンのことをモザイクと表現します。
</p>
<p>
Wikipedia によると、トークンとは「紀元前8000 年頃から紀元前3000 年までのメソポタミアの地層から出土する
直径が1cm 前後の粘土で作られたさまざまな形状の物体」のことを指します。
一方でモザイクとは「小片を寄せあわせ埋め込んで、絵（図像）や模様を表す装飾美術の技法。石、
陶磁器（モザイクタイル）、有色無色のガラス、貝殻、木などが使用され、建築物の床や壁面、あるいは工芸品の装飾のために施される。」
とあります。Symbol においてモザイクとはSymbol が作りなすエコシステムの様相を表すさまざまな構成要素、と考えることができます。
</p>

<h3><a href={{ qls_ss5_create_mosaic_form }}>5.1 モザイク生成</a></h3>
<p>
モザイク生成には作成するモザイクを定義します。
</p>

<span>divisibility: 可分性</span>
<p>
可分性は小数点第何位まで数量の単位とするかを決めます。データは整数値として保持
されます。
</p>
<p>
divisibility:0 = 1 divisibility:1 = 1.0 divisibility:2 = 1.00
</p>

<span>duration: 有効期限</span>
<p>
0 を指定した場合、無期限に使用することができます。モザイク有効期限を設定した場合、
期限が切れた後も消滅することはなくデータとしては残ります。
アカウント1 つにつき1000 までしか所有することはできませんのでご注意ください。
</p>
<p>
次に数量を変更します
</p>

<h4><a href={{ qls_ss5_list_mosaics_form }}>5.1.1 確認</a></h4>
<p>
モザイク作成したアカウントが持つモザイク情報を確認します。
</p>

<h4><a href={{ qls_ss5_mosaics_transfer_transaction_form }}>5.2 モザイク送信</a></h4>
<p>
作成したモザイクを送信します。よく、ブロックチェーンに初めて触れる方は、
モザイク送信について「クライアント端末に保存されたモザイクを別のクライアント端末へ送信」することとイメージされている人がいますが、
モザイク情報はすべてのノードで常に共有・同期化されており、送信先に未知のモザイク情報を届けることではありません。
正確にはブロックチェーンへ「トランザクションを送信」することにより、アカウント間でのトークン残量を組み替える操作のことを言います。
</p>

<span>■送信モザイクリスト<span> 
<p>
複数のモザイクを一度に送信できます。XYM を送信するには以下のモザイクID を指定します。
<ul>
<li>メインネット：6BED913FA20223F8</li>
<li>テストネット：72C0212E67A08BCE</li>
</ul>
</p>
<p>
<span>送信量</span>
<p>
小数点もすべて整数にして指定します。XYM は可分性6 なので、1XYM=1000000 で指定します。
</p>

<h4><a href={{ qls_ss5_confirm_transaction_form }}>5.2.1 送信確認</a></h4>

<p>
TransferTransaction の mosaics に2 種類のモザイクが送信されていることが確認できます。
また、TransactionInfo に承認されたブロックの情報が記載されています。
</p>

<h3>5.3 現場で使えるヒント</h3>
<h4>5.3.1 所有証明</h4>
<p>
前章でトランザクションによる存在証明について説明しました。
アカウントの作成した送信指示が消せない形で残せるので、絶対につじつまの合う台帳を作ることができます。
すべてのアカウントの「絶対に消せない送信指示」の蓄積結果として、各アカウントは自分のモザイク所有を証明することができます。
（本ドキュメントでは所有を「自分の意思で手放すことができる状態」とします。
少し話題がそれますが、法律的にはデジタルデータに所有権が認められていないのも、
一度知ってしまったデータは自分の意志では忘れたことを他人に証明することができない点に注目すると
「手放すことができる状態」の意味に納得がいくかもしれません。
ブロックチェーンによりそのデータの放棄を明確に示すことができるのですが、詳しくは法律の専門の方にお任せします。）
</p>

<span>NFT(non fungible token)</span>
<p>
発行枚数を1 に限定し、supplyMutable をfalse に設定することで、1 つだけしか存在しないトークンを発行できます。
モザイクは作成したアカウントアドレスを改ざんできない情報として保有しているので、
そのアカウントの送信トランザクションをメタ情報として利用できます。
7 章で説明するメタデータをモザイクに登録する方法もありますが、その方法は登録アカウントとモザイク作成者の連署によって更新可能なことにご注意ください。
NFT の実現方法はいろいろありますが、その一例の処理概要を以下に例示します（実行するためには nonce やフラグ情報を適切に設定してください）。
</p>

<p>
■注意事項 モザイクの作成者が全数量を所有している場合、供給量を変更することが可能です。
またトランザクションに分割してデータを記録した場合、改ざんできませんがデータの追記は可能です。
NFT を運用する場合はモザイク作成者の秘密鍵を厳重に管理・あるいは破棄するなど、適切な運用にご注意ください。
</p>
<p>
<span>回収可能なポイント運用</span>
transferable をfalse に設定することで転売が制限されるため、
資金決済法の影響を受けにくいポイントを定義することができます。
またrevokable をtrue に設定することで、
ユーザ側が秘密鍵を管理しなくても使用分を回収できるような中央管理型のポイント運用を行うことができます。
</p>


{% endtrans %}
